services:
  kobra-back-app:
    image: ghcr.io/aseca-kobra/kobra-back:latest
    container_name: kobra-back-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@kobra-back-db:5432/postgres
      - EXTERNAL_API_URL=http://kobra-sim-bank:3002
    depends_on:
      kobra-back-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  kobra-back-db:
    image: postgres:alpine
    container_name: kobra-back-db
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5433:5432'
    volumes:
      - kobra-db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kobra-sim-bank:
    image: ghcr.io/aseca-kobra/sim-bank:latest
    container_name: kobra-sim-bank
    ports:
      - "3002:3002"
    environment:
      - BACK_API_URL=http://kobra-back-app:3000
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  kobra-front-app:
    image: ghcr.io/aseca-kobra/kobra-front:latest
    container_name: kobra-front-app
    ports:
      - "8080:80"
    environment:
      - VITE_API_URL=http://localhost:3000
    restart: unless-stopped

volumes:
  kobra-db-data:
